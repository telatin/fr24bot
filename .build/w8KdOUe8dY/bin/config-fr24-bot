#!/usr/bin/env perl
#ABSTRACT: Configuration for FR24-Bot
#PODNAME: config-fr24-bot

use v5.24;
use warnings;
use Getopt::Long;
use FindBin qw($RealBin);
use Data::Dumper;
use File::Basename;
use JSON::PP;
use Term::ANSIColor qw(:constants);
if (-e "$RealBin/../dist.ini") {
    use lib "$RealBin/../lib";
}
use FR24::Bot;

# Define version
our $VERSION = $FR24::Bot::VERSION;
my $config_file = "$ENV{HOME}/.config/fr24-bot.ini";
my $verbose = 0;
my $opt_api_key;
my $opt_IP;
if (not GetOptions(
    'a|api-key=s'  => \$opt_api_key,    
    'i|ip=s'       => \$opt_IP,
    'c|config=s'   => \$config_file,
    'verbose'      => \$verbose,
    'version'      => sub { say basename($0). " " . $VERSION; exit 0;},
    'h|help'       => sub { usage(); exit 0;},
)) { 
    usage(); 
    die "ERROR: Invalid options\n";
}

my $config = FR24::Bot::loadconfig($config_file);

# Config to json 

if ($verbose) {
    my $json = JSON::PP->new->utf8->pretty->canonical;
    my $json_text = $json->encode($config);
    say STDERR "------- Config File -------\n", $json_text;
}


my $NEW_API_KEY = undef;
if (not defined $opt_api_key) {
    say STDERR GREEN, "> API KEY", RESET;
    $NEW_API_KEY = getInfoFromUser("Provide API key for Telegram", $config->{"telegram"}->{"apikey"});
}
my $NEW_IP = undef;
if (not defined $opt_IP) {
    say STDERR GREEN, "> FR24 Server IP", RESET;
    $NEW_IP = getInfoFromUser("Provide IP address for FR24", $config->{"server"}->{"ip"});
}

$config->{"telegram"}->{"apikey"} = $NEW_API_KEY if defined $NEW_API_KEY;
$config->{"server"}->{"ip"} = $NEW_IP if defined $NEW_IP;

if ($verbose) {
    my $json = JSON::PP->new->utf8->pretty->canonical;
    my $json_text = $json->encode($config);
    say STDERR "------- New Config File -------\n", $json_text;
}

eval {
    FR24::Bot::saveconfig($config_file, $config);
};
if ($@) {
    say STDERR "ERROR SAVING to $config_file:\n$@";
    exit 1;
} else {
    say STDERR "Config saved to $config_file" if $verbose;
    exit 0;
}



sub usage {
    say "Usage: $0 [-a|--api-key API_KEY] [-c|--config CONFIG_FILE] [-h|--help] [-v|--version]";
    say "Default config file: $ENV{HOME}/.config/fr24-bot.ini";
}

sub getInfoFromUser {
    my ($prompt, $default) = @_;
    $default = "" if not defined $default;
    print BOLD $prompt, RESET, " [$default]: ";
    my $answer = <STDIN>;
    chomp $answer;
    # Loop to confirm with "y"
    while (1) {
        my $msg = "Do you confirm your answer";
        if (length($answer) < 1) {
            $answer = $default;
            my $msg =  "No answer given. Do you want to keep the default?";
        }

        say UNDERLINE "$msg [$answer]", RESET, BOLD," (y/n): ", RESET;
        my $confirm = <STDIN>;
        chomp $confirm;
        if ($confirm  =~ m/^[yY]$/) {
            return $answer;
        } elsif ($confirm eq "n") {
            return getInfoFromUser($prompt, $default);
        }
    }    
}

__END__

=pod

=encoding UTF-8

=head1 NAME

config-fr24-bot - Configuration for FR24-Bot

=head1 VERSION

version 0.0.1

=head1 AUTHOR

Andrea Telatin <proch@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is Copyright (c) 2023 by Andrea Telatin.

This is free software, licensed under:

  The MIT (X11) License

=cut
